import sys
import numpy as np
n=int(sys.argv[1])
selection_type=str(sys.argv[2])
value = int(sys.argv[3])
comment=str(sys.argv[4])
error=[]
if selection_type=='seeded':
    seed=int(sys.argv[3])
    seq_start=6
else:
    seq_start=int(sys.argv[3])
    seed=None
path=selection_type+comment+str(value)+"/"
input= path+"analysis_"+str(n)+".txt"
logs=path+"output_"+str(n)+".log"
snps=1

out= path+"/result"+str(n)+".txt"
o=sys.stdout
with open (logs)as select:
    selection_line= select.readlines()
    line_num=0
    for line in selection_line:
        if line_num==1:
            seed=line
        elif line_num==2:
            amt_select_snp=int(line[16:])
        elif line_num==9:
            if line[0]=="[":
                var=line.split()
                var[0]=var[0][1:]
                var[-1]=var[-1][:-1]
                for i in range(len(var)):
                    var[i]=int(var[i][:-1])-6
                # print(var)
            else:#start as method
                var=range(seq_start-6,amt_select_snp+seq_start-6)
        if line_num==14:
            risk_allele= line 
        line_num+=1
second=0
first=0
stats=[]

with open(out,'w') as outgoing:
    sys.stdout=outgoing
    with open(input) as file:    
        result=[]
        lines = file.readlines()
        
        for line in lines:
            if line[0]!="." and line[0]!="#":
                result.append([])
                for i in range(len(line)):
                    snp=i//2    #corresponding to pos k
                    
                    if line[i]=="1":
                        if i%2==1:
                            second+=1
                            plus=0.5
                        else:
                            first+=1
                            plus=0
                        stats.append(snp)
                        result[-1].append(var[snp]+plus)
                        
                        
                    elif line[i]=="0":
                        if i%2==1:
                            second+=1
                            plus=0.5
                        else:
                            first+=1
                            plus=0
                        stats.append(snp)
                        result[-1].append(-var[snp]-plus)
                    elif line[i]=="-":
                        pass
                    elif line[i]==" " or line[i]==" ":
                        break
                    else:
                        error.append("inconsistency at column", i,"that is snp", var[snp], "with:", line[i], "!")
                
            
            if line[0:2]==".i":
                snps=int(line[2:])//2
                print("SNPs:")
                print(snps)
            else:#ignore all lines generated by espresso or comments
                pass
        counter=0
        print("products:")
        print(len(result))
        print("first:")
        print(first)
        print("second:")
        print(second)
        print("var:")
        print(np.var(stats)/snps)#apartness in regards of selection
        print("Selection:")
        print(var)#selection
        print(seed[:-1])
        print("Risk allele:")
        print(risk_allele[:-1])
        print("error:", len(error))
        for e in error:
            print(e)
        print("result:")
        for e in result:
            counter+=len(e)
            print(e)
        print("input length (.i)")
        print(snps)
        print("amount of identified SNPs:") 
        print(counter)
        
        